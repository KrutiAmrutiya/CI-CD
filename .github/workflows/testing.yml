name: Django Tests

on:
  push:
    branches:
      - main
      - develop
      - abc

  pull_request:
    branches:
      - main
      - develop
      - abc
    types: [labeled]

  pull_request_review:
    types:
      - submitted
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Coverage report
        run: |
          pip install coverage
          coverage run manage.py test
          coverage report
      - name: Django Testing
        run: |
          python3 manage.py test
  merge-branch:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Merge by labeled
        uses: actions/checkout@v2
        with:
          label_name: 'merged in main'
          target_branch: main
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "::set-output name=test::hello"
      - id: step2
        run: echo "::set-output name=test::world"
  job2:
      runs-on: ubuntu-latest
      needs: job1
      steps:
        - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
  main:
      if: ${{ github.event.label.name == 'merge main' }}
      name: Merge Main
      runs-on: ubuntu-latest
      steps:
        - name: git checkout
          uses: actions/checkout@v2
          with:
            ref: ${{ github.event.pull_request.head.ref }}
            fetch-depth: 0

        - name: perform merge
          run: |
            git config --global user.email "kruti.amrutiya@tntra.io"
            git config --global user.name "KrutiAmrutiya"
            git status
            git pull
            git checkout "$DEFAULT_BRANCH"
            git status
            git checkout "$GITHUB_HEAD_REF"
            git merge "$DEFAULT_BRANCH" --no-edit
            git push
            git status
